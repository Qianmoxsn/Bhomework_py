# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'view.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time
import sys
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
import numpy as np
from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import QPropertyAnimation
# from PyQt5.QtCore import Qrect
import data
import gl_VAR

f = open('GUI/outfile.txt', 'r')
gl_time = 1

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 600))
        MainWindow.setMaximumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.title_label = QtWidgets.QLabel(self.centralwidget)
        self.title_label.setGeometry(QtCore.QRect(40, 10, 371, 61))
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(16)
        self.title_label.setFont(font)
        self.title_label.setObjectName("title_label")
        self.title_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.title_label_2.setGeometry(QtCore.QRect(580, 30, 91, 28))
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(16)
        self.title_label_2.setFont(font)
        self.title_label_2.setObjectName("title_label_2")
        self.time_lcd = QtWidgets.QLCDNumber(self.centralwidget)
        self.time_lcd.setGeometry(QtCore.QRect(687, 20, 91, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time_lcd.sizePolicy().hasHeightForWidth())
        self.time_lcd.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.time_lcd.setFont(font)
        self.time_lcd.setObjectName("time_lcd")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(681, 476, 101, 62))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.next_button = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(10)
        self.next_button.setFont(font)
        self.next_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next_button.setObjectName("next_button")
        self.verticalLayout.addWidget(self.next_button)
        self.auto_button = QtWidgets.QRadioButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(12)
        self.auto_button.setFont(font)
        self.auto_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.auto_button.setMouseTracking(True)
        self.auto_button.setObjectName("auto_button")
        self.verticalLayout.addWidget(self.auto_button)
        self.layoutWidget1 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget1.setGeometry(QtCore.QRect(561, 100, 221, 191))
        self.layoutWidget1.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.layoutWidget1.setAutoFillBackground(False)
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_3 = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_3.setAutoFillBackground(False)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 1, 0, 1, 3)
        self.label_4 = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_4.setAutoFillBackground(False)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 0, 1, 1)
        self.stations_label = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.stations_label.setFont(font)
        self.stations_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.stations_label.setAutoFillBackground(False)
        self.stations_label.setObjectName("stations_label")
        self.gridLayout.addWidget(self.stations_label, 2, 1, 1, 2)
        self.label_6 = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_6.setAutoFillBackground(False)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 3, 0, 1, 1)
        self.distance_label = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.distance_label.setFont(font)
        self.distance_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.distance_label.setAutoFillBackground(False)
        self.distance_label.setObjectName("distance_label")
        self.gridLayout.addWidget(self.distance_label, 3, 1, 1, 2)
        self.label_8 = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_8.setAutoFillBackground(False)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 4, 0, 1, 1)
        self.stratedy_lable = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.stratedy_lable.setFont(font)
        self.stratedy_lable.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.stratedy_lable.setAutoFillBackground(False)
        self.stratedy_lable.setObjectName("stratedy_lable")
        self.gridLayout.addWidget(self.stratedy_lable, 4, 1, 1, 2)
        self.label = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setAutoFillBackground(False)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.status_label = QtWidgets.QLabel(self.layoutWidget1)
        self.status_label.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.status_label.setFont(font)
        self.status_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.status_label.setAutoFillBackground(False)
        self.status_label.setObjectName("status_label")
        self.gridLayout.addWidget(self.status_label, 0, 1, 1, 2)
        self.layoutWidget2 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget2.setGeometry(QtCore.QRect(560, 310, 221, 71))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_10 = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.gridLayout_2.addWidget(self.label_10, 0, 0, 1, 1)
        self.exp_label = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.exp_label.setFont(font)
        self.exp_label.setObjectName("exp_label")
        self.gridLayout_2.addWidget(self.exp_label, 0, 1, 1, 1)
        self.progressBar = QtWidgets.QProgressBar(self.layoutWidget2)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout_2.addWidget(self.progressBar, 1, 0, 1, 2)
        self.layoutWidget3 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget3.setGeometry(QtCore.QRect(560, 400, 221, 71))
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(12)
        self.layoutWidget3.setFont(font)
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.layoutWidget3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_13 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(12)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.gridLayout_3.addWidget(self.label_13, 1, 0, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(12)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.gridLayout_3.addWidget(self.label_15, 1, 1, 1, 2)
        self.label_12 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(12)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.gridLayout_3.addWidget(self.label_12, 0, 0, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(12)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.gridLayout_3.addWidget(self.label_14, 0, 1, 1, 2)
        self.back = QtWidgets.QLabel(self.centralwidget)
        self.back.setGeometry(QtCore.QRect(70, 70, 420, 420))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/无边圆环.png'
        self.back.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.back.setObjectName("back")
        self.st9 = QtWidgets.QLabel(self.centralwidget)
        self.st9.setGeometry(QtCore.QRect(530, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st9.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st9.setObjectName("st9")
        self.st1 = QtWidgets.QLabel(self.centralwidget)
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st1.setStyleSheet("QLabel{\n"
                             "background-image: url(\"%s\");\n"
                             "background-position:center;\n"
                             "background-repeat:no-repeat;\n"
                             "}" % img_path)
        self.st1.setGeometry(QtCore.QRect(130, 510, 40, 40))
        self.st1.setObjectName("st1")
        self.st10 = QtWidgets.QLabel(self.centralwidget)
        self.st10.setGeometry(QtCore.QRect(580, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st10.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st10.setObjectName("st10")
        self.st2 = QtWidgets.QLabel(self.centralwidget)
        self.st2.setGeometry(QtCore.QRect(180, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st2.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st2.setObjectName("st2")
        self.st3 = QtWidgets.QLabel(self.centralwidget)
        self.st3.setGeometry(QtCore.QRect(230, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st3.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st3.setObjectName("st3")
        self.st4 = QtWidgets.QLabel(self.centralwidget)
        self.st4.setGeometry(QtCore.QRect(280, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st4.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st4.setObjectName("st4")
        self.st5 = QtWidgets.QLabel(self.centralwidget)
        self.st5.setGeometry(QtCore.QRect(330, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st5.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st5.setObjectName("st5")
        self.st6 = QtWidgets.QLabel(self.centralwidget)
        self.st6.setGeometry(QtCore.QRect(380, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st6.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st6.setObjectName("st6")
        self.st7 = QtWidgets.QLabel(self.centralwidget)
        self.st7.setGeometry(QtCore.QRect(430, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st7.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st7.setObjectName("st7")
        self.st8 = QtWidgets.QLabel(self.centralwidget)
        self.st8.setGeometry(QtCore.QRect(480, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/站.png'
        self.st8.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.st8.setObjectName("st8")
        self.con = QtWidgets.QLabel(self.centralwidget)
        self.con.setGeometry(QtCore.QRect(70, 510, 40, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/到站.png'
        self.con.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.con.setObjectName("con")
        self.bus = QtWidgets.QLabel(self.centralwidget)
        self.bus.setGeometry(QtCore.QRect(60, 260, 60, 40))
        img_path = 'C:/Users/汪镕彬/Desktop/erer/试试看3.png'
        self.bus.setStyleSheet("QLabel{\n"
                               "background-image: url(\"%s\");\n"
                               "background-position:center;\n"
                               "background-repeat:no-repeat;\n"
                               "}" % img_path)
        self.bus.setObjectName("bus")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.title_label.setText(_translate("MainWindow", "公交车调度系统动画演示界面"))
        self.title_label_2.setText(_translate("MainWindow", "运行时间："))
        self.next_button.setText(_translate("MainWindow", "NEXT"))
        self.auto_button.setText(_translate("MainWindow", "AutoRun"))
        self.label_3.setText(_translate("MainWindow", "当前配置文件"))
        self.label_4.setText(_translate("MainWindow", "总车站数："))
        self.stations_label.setText(_translate("MainWindow", "——"))
        self.label_6.setText(_translate("MainWindow", "车站间距："))
        self.distance_label.setText(_translate("MainWindow", "——"))
        self.label_8.setText(_translate("MainWindow", "调度策略："))
        self.stratedy_lable.setText(_translate("MainWindow", "——"))
        self.label.setText(_translate("MainWindow", "运行状态："))
        self.status_label.setText(_translate("MainWindow", "准备就绪"))
        self.label_10.setText(_translate("MainWindow", "预计运行时间"))
        self.exp_label.setText(_translate("MainWindow", "--"))
        self.label_13.setText(_translate("MainWindow", "目标车站"))
        self.label_15.setText(_translate("MainWindow", "无请求"))
        self.label_12.setText(_translate("MainWindow", "车辆位置"))
        self.label_14.setText(_translate("MainWindow", "1"))
        #self.st9.setText(_translate("MainWindow", "st9"))
        #self.st1.setText(_translate("MainWindow", "st1"))
        #self.st10.setText(_translate("MainWindow", "st10"))
        #self.st2.setText(_translate("MainWindow", "st2"))
        #self.st3.setText(_translate("MainWindow", "st3"))
        #self.st4.setText(_translate("MainWindow", "st4"))
        #self.st5.setText(_translate("MainWindow", "st5"))
        #self.st6.setText(_translate("MainWindow", "st6"))
        #self.st7.setText(_translate("MainWindow", "st7"))
        #self.st8.setText(_translate("MainWindow", "st8"))
        #self.con.setText(_translate("MainWindow", "con"))
        #self.bus.setText(_translate("MainWindow", "bus"))

        # signals:
        self.next_button.clicked.connect(self.read_file)
        self.auto_button.clicked.connect(self.autoplay)
        self.con.hide()

    # 读输出文件（outfile.txt）,解析，发送信号
    def read_file(self):
        global f
        raw_time = f.readline()
        # 判断进程结束（有bug）
        if raw_time == 'end\n':
            self.status_label.setText("调度结束")
            self.next_button.clicked.disconnect()
            self.auto_button.clicked.disconnect()
            self.next_button.close()
            self.auto_button.close()
        else:
            raw_time = raw_time.split(':')[1]

            # 更新运行时间
            self.time_show(raw_time)
            # 更新进度条
            self.display_progressbar(value=int(raw_time))

            # 更新车辆位置
            raw_pos = f.readline()
            raw_pos = raw_pos.split(':')[1]
            QApplication.processEvents()
            self.test_postionshow(raw_pos)
            QApplication.processEvents()

            # 更新当前指令
            raw_cmd = f.readline()
            raw_cmd = raw_cmd.split(':')[1]
            QApplication.processEvents()
            self.test_cmdshow(raw_cmd)
            QApplication.processEvents()

    # 自动播放选项
    def autoplay(self):
        while self.auto_button.isChecked():
            self.next_button.click()
            for i in range(500):
                time.sleep(0.001)
                QApplication.processEvents()

    # 绘制路线图背景（暂无）
    def backdraw(self):
        pass

    # 显示配置文件
    def config(self, strategy, stations, distance):
        self.stratedy_lable.setText(strategy)
        self.stations_label.setText(stations)
        self.distance_label.setText(distance)

    # 显示运行时间
    def time_show(self, time):
        self.time_lcd.display(time)

    # 显示总（预期）时间
    def set_GT(self, GT):
        global gl_time
        gl_time = GT
        self.exp_label.setText(GT)

    # 显示位置（临时）
    def test_postionshow(self, pos):
        position = int(pos)
        if position%gl_VAR.g_dis != 0:
            self.label_14.setText("路途中")
        else:
            self.label_14.setText(str(int(position/gl_VAR.g_dis+1)))
        #QtCore, QtGui, QtWidgets
        self.bus_Anim = QtGui.QGraphicsPixmapItem(scaledPixmap)
        self.bus_Anim.setTransformOriginPoint(25, 27.5)  # 设置中心为旋转
        self.bus_Anim = QPropertyAnimation(self.bus, b"rotation")
        self.bus_Anim.setStartValue(QtCore.QRect(180, 1, 47, 30))
        self.bus_Anim.setEndValue(QtCore.QRect(360, 1, 47, 30))
        #self.bus_Anim.setTransformOriginPoint(260, 260, 40, 40)
        #self.bus_Anim.setRotation(data.theta[position])
        #self.bus_Anim.setEndValue(QtCore.QRect(data.x[position], data.y[position], 47, 30))
        self.bus_Anim.setEasingCurve(QtCore.QEasingCurve.InOutQuad)
        self.bus_Anim.setDuration(300)
        self.bus_Anim.start()

    # 显示指令（临时）
    def test_cmdshow(self, cmd):

        con = int(cmd)
        if con == -1:
            self.status_label.setText("停运")
            self.con.hide()
            self.label_15.setText("无请求")
        else:
            self.label_15.setText(str(con))
            self.status_label.setText("运行")
            self.con.show()
            self.con_Anim = QPropertyAnimation(self.con, b"geometry")
            self.con_Anim.setEndValue(
                QtCore.QRect(data.x[(con - 1) * gl_VAR.g_dis], data.y[(con - 1) * gl_VAR.g_dis], 40, 40))
            self.con_Anim.setDuration(1)
            self.con_Anim.start()

    # 设定进度条最大值（总时间）
    def set_progressbar(self, value):
        self.progressBar.setMaximum(value)

    # 更新进度条
    def display_progressbar(self, value):
        self.progressBar.setValue(value)

    # 圆上坐标计算
    def zuobiao(self, totsta):
        totaldis = gl_VAR.g_totsta * gl_VAR.g_dis
        a = 260
        b = 260
        r = 200
        for i in range(totaldis):
            data.theta[i] = 2 * i * np.pi / totaldis
            data.x[i] = a - r * np.cos(data.theta[i])
            data.y[i] = b - r * np.sin(data.theta[i])
        if totsta >= 1:
            self.st1_Anim = QPropertyAnimation(self.st1, b"geometry")
            self.st1_Anim.setEndValue(QtCore.QRect(data.x[0], data.y[0], 40, 40))
            self.st1_Anim.setDuration(3)
            self.st1_Anim.start()
        else:
            self.st1.hide()
        if totsta >= 2:
            self.st2_Anim = QPropertyAnimation(self.st2, b"geometry")
            self.st2_Anim.setEndValue(QtCore.QRect(data.x[gl_VAR.g_dis], data.y[gl_VAR.g_dis], 40, 40))
            self.st2_Anim.setDuration(3)
            self.st2_Anim.start()
        else:
            self.st2.hide()
        if totsta >= 3:
            self.st3_Anim = QPropertyAnimation(self.st3, b"geometry")
            self.st3_Anim.setEndValue(QtCore.QRect(data.x[2 * gl_VAR.g_dis], data.y[2 * gl_VAR.g_dis], 40, 40))
            self.st3_Anim.setDuration(3)
            self.st3_Anim.start()
        else:
            self.st3.hide()
        if totsta >= 4:
            self.st4_Anim = QPropertyAnimation(self.st4, b"geometry")
            self.st4_Anim.setEndValue(QtCore.QRect(data.x[3 * gl_VAR.g_dis], data.y[3 * gl_VAR.g_dis], 40, 40))
            self.st4_Anim.setDuration(3)
            self.st4_Anim.start()
        else:
            self.st4.hide()
        if totsta >= 5:
            self.st5_Anim = QPropertyAnimation(self.st5, b"geometry")
            self.st5_Anim.setEndValue(QtCore.QRect(data.x[4 * gl_VAR.g_dis], data.y[4 * gl_VAR.g_dis], 40, 40))
            self.st5_Anim.setDuration(3)
            self.st5_Anim.start()
        else:
            self.st5.hide()
        if totsta >= 6:
            self.st6_Anim = QPropertyAnimation(self.st6, b"geometry")
            self.st6_Anim.setEndValue(QtCore.QRect(data.x[5 * gl_VAR.g_dis], data.y[5 * gl_VAR.g_dis], 40, 40))
            self.st6_Anim.setDuration(3)
            self.st6_Anim.start()
        else:
            self.st6.hide()
        if totsta >= 7:
            self.st7_Anim = QPropertyAnimation(self.st7, b"geometry")
            self.st7_Anim.setEndValue(QtCore.QRect(data.x[6 * gl_VAR.g_dis], data.y[6 * gl_VAR.g_dis], 40, 40))
            self.st7_Anim.setDuration(3)
            self.st7_Anim.start()
        else:
            self.st7.hide()
        if totsta >= 8:
            self.st8_Anim = QPropertyAnimation(self.st8, b"geometry")
            self.st8_Anim.setEndValue(QtCore.QRect(data.x[7 * gl_VAR.g_dis], data.y[7 * gl_VAR.g_dis], 40, 40))
            self.st8_Anim.setDuration(3)
            self.st8_Anim.start()
        else:
            self.st8.hide()
        if totsta >= 9:
            self.st9_Anim = QPropertyAnimation(self.st9, b"geometry")
            self.st9_Anim.setEndValue(QtCore.QRect(data.x[8 * gl_VAR.g_dis], data.y[8 * gl_VAR.g_dis], 40, 40))
            self.st9_Anim.setDuration(3)
            self.st9_Anim.start()
        else:
            self.st9.hide()
        if totsta >= 10:
            self.st10_Anim = QPropertyAnimation(self.st10, b"geometry")
            self.st10_Anim.setEndValue(QtCore.QRect(data.x[9 * gl_VAR.g_dis], data.y[9 * gl_VAR.g_dis], 40, 40))
            self.st10_Anim.setDuration(3)
            self.st10_Anim.start()
        else:
            self.st10.hide()

        # self.pani = QParallelAnimationGroup(self)  #创建并行动画组
        # 并行动画组就是组内的动画同时执行
        # pani = QSequentialAnimationGroup(self)  # 创建串行动画组
        # 串行动画组就是组内动画按照顺序一个一个执行
        # self.pani = pani
        # self.pani.addAnimation(ani1)  # 往动画组里添加动画
        # pani.addPause(5000)  #添加暂停时间----并行动画没有这个指令
        # currentAnimation() -> QAbstractAnimation----并行动画没有这个指令
        # self.pani.addAnimation(ani2)
        # pani.insertAnimation(1, ani3)  # 插入动画
        # 参数1  序号
        # removeAnimation(QAbstractAnimation animation)    移除动画
        # animationAt(int index) -> QAbstractAnimation    获取动画
        # takeAnimation(int index) -> QAbstractAnimation   获取并移除
        # animationCount() -> int   动画个数
        # clear()    清空动画
        # self.pani.start()  # 启动动画组

        '''
        # move
        self.listView_Anim = QPropertyAnimation(self.tt1_3, b"geometry")  # 参数self.listView就是要进行动画设置的组件，用返回的对象来进行设置
        self.listView_Anim.setDuration(3000)  # 设定动画时间
        self.listView_Anim.setStartValue(QtCore.QRect(150, 290, 40, 40))  # 设置起始大小
        # self.listView_Anim.setKeyValueAt(0.5,QtCore.QRect(200, 200, 40, 40))  #关键帧
        #
        # 
        # self.listView_Anim.setEasingCurve(QtCore.QEasingCurve.InOutQuad)  #特效
        self.listView_Anim.setEndValue(QtCore.QRect(430, 290, 40, 40))  # 设置终止大小
        self.listView_Anim.start()  # 动画开始
        '''
